import java.time.LocalDateTime

apply plugin: "maven-publish"
apply plugin: "signing"

jar {
    into("META-INF/") {
        from rootProject.file("LICENSE")
    }
    into("META-INF/maven/$project.group/$project.name") {
        from { generatePomFileForMavenJavaPublication }
        rename ".*", "pom.xml"
    }
    afterEvaluate {
        manifest {
            attributes 'Implementation-Title': archiveBaseName
            attributes 'Implementation-Version': archiveVersion
            attributes 'Built-Gradle': gradle.gradleVersion
            attributes 'Bundle-DocURL': 'https://gitee.com/baomidou/shaun'
            attributes 'Build-OS': System.getProperty("os.name")
            attributes 'Built-By': System.getProperty("user.name")
            attributes 'Build-Jdk': System.getProperty("java.version")
            attributes 'Build-Timestamp': LocalDateTime.now().format("yyyy-MM-dd HH:mm:ss")
        }
    }
}

publishing {
    repositories {
        maven {
            def userName = System.getProperty("un")
            def passWord = System.getProperty("ps")
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            credentials {
                username userName
                password passWord
            }
        }
    }

    publications {
        mavenJava(MavenPublication) {
            from components.java

            artifact sourcesJar
            artifact javadocJar

            pom {

                name = 'shaun'
                packaging 'jar'
                description = rootProject.description
                url = 'https://gitee.com/baomidou/shaun'

                scm {
                    url = 'https://gitee.com/baomidou/shaun'
                    connection = 'scm:git:https://gitee.com/baomidou/shaun.git'
                    developerConnection = 'scm:git:git@gitee.com:baomidou/shaun.git'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'baomidou'
                        name = 'miemie'
                        email = 'wonderming@vip.qq.com'
                    }
                }

                withXml {
                    def root = asNode()
                    root.dependencies.'*'.findAll {
                        def d = it
                        d.scope.text() == 'runtime' && project.configurations.findByName("implementation").allDependencies.find { dep ->
                            dep.name == it.artifactId.text()
                        }.each() {
                            d.scope*.value = 'compile'
                            d.appendNode('optional', true)
                        }
                    }
                }
            }
        }
    }

    signing {
        sign publishing.publications.mavenJava
    }
}